'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _ExecutionEnvironment = require('./ExecutionEnvironment');

var _DOMUtils = require('./DOMUtils');

var _createHistory = require('./createHistory');

var _createHistory2 = _interopRequireDefault(_createHistory);

function getUserConfirmation(message, callback) {
  callback(window.confirm(message));
}

function startBeforeUnloadListener(_ref) {
  var getTransitionConfirmationMessage = _ref.getTransitionConfirmationMessage;

  function listener(event) {
    var message = getTransitionConfirmationMessage();

    if (typeof message === 'string') {
      (event || window.event).returnValue = message;
      return message;
    }
  }

  _DOMUtils.addEventListener(window, 'beforeunload', listener);

  return function () {
    _DOMUtils.removeEventListener(window, 'beforeunload', listener);
  };
}

function createDOMHistory(options) {
  var history = _createHistory2['default'](_extends({
    getUserConfirmation: getUserConfirmation
  }, options, {
    saveState: _DOMUtils.saveState,
    readState: _DOMUtils.readState,
    go: _DOMUtils.go
  }));

  var listenerCount = 0;
  var stopBeforeUnloadListener;

  function listen(listener) {
    _invariant2['default'](_ExecutionEnvironment.canUseDOM, 'DOM history needs a DOM');

    if (++listenerCount === 1) stopBeforeUnloadListener = startBeforeUnloadListener(history);

    var unlisten = history.listen(listener);

    return function () {
      unlisten();

      if (--listenerCount === 0) stopBeforeUnloadListener();
    };
  }

  return _extends({}, history, {
    listen: listen
  });
}

exports['default'] = createDOMHistory;
module.exports = exports['default'];